trigger:
  branches:
    include:
      - main

pool:
  name: windowsagent

variables:
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build .NET App'
        steps:
          - checkout: self

          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '6.0.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: 'src/MyApp/MyApp.sln'  # ✅ Specific path to .sln

          - task: VSBuild@1
            inputs:
              solution: 'src/MyApp/MyApp.sln'         # ✅ Specific path to .sln
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'

          - script: dir $(Build.SourcesDirectory)
            displayName: 'List repo contents'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'
              publishLocation: 'Container'

  - stage: Test
    displayName: 'Test Stage'
    dependsOn: Build
    jobs:
      - job: TestJob
        displayName: 'Run Unit Tests'
        steps:
          - task: VSTest@2
            inputs:
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*test*.dll
                !**\*TestAdapter.dll
                !**\obj\**

  - stage: Package
    displayName: 'Package Stage'
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: PackageJob
        displayName: 'Create MSIX Package'
        steps:
          - powershell: |
              [xml]$manifest = Get-Content ".\Msix\Package.appxmanifest"
              $manifest.Package.Identity.Version = "1.0.0.$(Build.BuildId)"
              $manifest.Save(".\Msix\Package.appxmanifest")
            displayName: 'Update Manifest Version'

          - task: MSBuild@1
            inputs:
              solution: 'Msix/Msix.wapproj'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'
              msbuildArguments: '/p:AppxBundle=Never /p:AppxPackageSigningEnabled=false'
            displayName: 'Build MSIX Package'