trigger:
- master

variables:
  # Terraform backend configuration
  TF_BACKEND_RG: "tfstate-rg"
  TF_BACKEND_STORAGE: "tfstatestorageacct"
  TF_BACKEND_CONTAINER: "tfstate"
  TF_BACKEND_KEY: "infra.tfstate"

  # Azure service connection & Key Vault
  AZURE_SUBSCRIPTION: "AzureRM-Connection"
  KEYVAULT_NAME: "phillipg-kv"

stages:
- stage: Deploy
  jobs:
  - job: Terraform
    pool:
      name: windowsagent

    steps:
    # 1. Login with Azure CLI via service connection
    - task: AzureCLI@2
      name: AzureLogin
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Logged in as:"
          az account show --output table

    # 2. Download Key Vault secrets into env vars
    - task: AzureKeyVault@2
      name: GetSecrets
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        KeyVaultName: $(KEYVAULT_NAME)
        SecretsFilter: '*'         
        RunAsPreJob: false

    # 3. Generate backend.tf dynamically
    - powershell: |
        @"
        terraform {
          backend "azurerm" {
            resource_group_name  = "$(TF_BACKEND_RG)"
            storage_account_name = "$(TF_BACKEND_STORAGE)"
            container_name       = "$(TF_BACKEND_CONTAINER)"
            key                  = "$(TF_BACKEND_KEY)"
          }
        }
        "@ | Out-File backend.tf -Encoding utf8
      displayName: "Generate backend.tf"

    # 4. Terraform init, plan, apply
    - bash: |
        terraform init
        terraform plan -out=tfplan
        terraform apply -auto-approve tfplan
      displayName: "Terraform Apply"
