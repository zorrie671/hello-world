trigger:
  branches:
    include:
      - main

pool:
  name: windowsagent  # Replace with your actual agent pool name

variables:
  azureSubscription: 'AzureRM-Connection'  # Replace with your Azure DevOps service connection name
  resourceGroup: 'rg-phillipg-dev'
  location: 'westus2'
  storageAccount: 'phillipgstorage'
  containerName: 'tfstate'

steps:
- checkout: none

# üîß Bootstrap Azure resources for backend
- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Write-Host "Creating resource group if not exists..."
      az group create --name $(resourceGroup) --location $(location)

      Write-Host "Creating storage account if not exists..."
      az storage account create `
        --name $(storageAccount) `
        --resource-group $(resourceGroup) `
        --location $(location) `
        --sku Standard_LRS `
        --kind StorageV2

      Write-Host "Creating blob container if not exists..."
      az storage container create `
        --name $(containerName) `
        --account-name $(storageAccount)
  displayName: 'Bootstrap Azure Backend Resources'

# üß± Terraform Init
- script: |
    terraform init
  displayName: 'Terraform Init'
  workingDirectory: 'C:\PhillipG'

# üìê Terraform Plan
- script: |
    terraform plan -var-file="C:/PhillipG/terraform.tfvars" -out=tfplan
  displayName: 'Terraform Plan'
  workingDirectory: 'C:\PhillipG'

# üöÄ Terraform Apply
- script: |
    terraform apply -var-file="C:/PhillipG/terraform.tfvars" -auto-approve tfplan
  displayName: 'Terraform Apply'
  workingDirectory: 'C:\PhillipG'