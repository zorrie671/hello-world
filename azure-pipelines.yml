trigger:
  branches:
    include:
      - main

pool:
  name: windowsagent  # Replace with your actual agent pool name

variables:
  subscriptionId: '7b4156be-c801-4a1d-a9c5-418dc1158bb7'
  resourceGroup: 'rg-phillipg-dev'
  location: 'westus2'
  storageAccount: 'phillipgstorage'
  containerName: 'tfstate'
  keyVaultName: 'phillipg-kv'

# üîê Retrieve secrets from Azure Key Vault
steps:
- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'AzureRM-Connection'  # Name of your service connection
    KeyVaultName: '$(keyVaultName)'
    SecretsFilter: '*'
    RunAsPreJob: true

# üîß Bootstrap Azure Backend Resources
- powershell: |
    az login --service-principal `
      --username "$(client_id)" `
      --password "$(client_secret)" `
      --tenant "$(tenant_id)"

    az account set --subscription "$(subscriptionId)"

    az group create --name "$(resourceGroup)" --location "$(location)"

    az keyvault create --name "$(keyVaultName)" --resource-group "$(resourceGroup)" --location "$(location)"

    az storage account create --name "$(storageAccount)" --resource-group "$(resourceGroup)" --location "$(location)" --sku Standard_LRS --kind StorageV2

    az storage container create --name "$(containerName)" --account-name "$(storageAccount)"
  displayName: 'Bootstrap Azure Backend'
  workingDirectory: 'C:\PhillipG'

# ‚è≥ Wait for Azure to finalize resource creation
- powershell: |
    Write-Host "Waiting for Azure resources to become available..."
    Start-Sleep -Seconds 30
  displayName: 'Wait for Azure Resource Propagation'

# ‚úÖ Verify Resource Group and Storage Account
- powershell: |
    az group show --name "$(resourceGroup)"
    az storage account show --name "$(storageAccount)" --resource-group "$(resourceGroup)"
  displayName: 'Verify Azure Resources'
  workingDirectory: 'C:\PhillipG'

# üß± Terraform Init
- powershell: |
    terraform init
  displayName: 'Terraform Init'
  workingDirectory: 'C:\PhillipG'

# üìê Terraform Plan
- powershell: |
    terraform plan -var-file="C:/PhillipG/terraform.tfvars" -out=tfplan
  displayName: 'Terraform Plan'
  workingDirectory: 'C:\PhillipG'